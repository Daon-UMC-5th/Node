# openapi: 3.0.0
# info:
#   version: "1.0.0"
#   title: "DAON API"
#   description: "DAON API"
# servers:
#   - url: "http://15.164.2.250"

# securitySchemes:
#   BearerAuth:
#     type: "http"
#     scheme: "bearer"
#     bearerFormat: "JWT"

paths:
  # 일기 신고
  /report/diary/{diaryId}:
    post:
      summary: "일기 신고"
      tags:
        - Report
      description: "사용자가 일기를 신고할 수 있습니다. (header: authorization 에 유저 jwt 토큰 필요)"
      parameters:
        # - name: "Authorization"
        #   in: "header"
        #   required: true
        #   schema:
        #     type: "string"
        #   description: "JWT 토큰이 필요합니다"
        - name: "diaryId"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "신고할 일기의 ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "reason"
              properties:
                reason:
                  type: "string"
                  example: 낚시/도배
      responses:
        "200":
          description: "신고가 성공적으로 생성됨"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  isSuccess:
                    type: "boolean"
                  code:
                    type: "integer"
                    example: 200
                  message:
                    type: "string"
                    example: "신고 처리가 완료되었습니다."
                  result:
                    type: "object"
        "404":
          description: "일기를 찾을 수 없음"
        "409":
          description: "일기가 이미 신고됨"
        "500":
          description: "내부 서버 오류"

  # 게시판 신고
  /report/board/{boardId}:
    post:
      summary: "게시판 글 신고"
      tags:
        - Report
      description: "사용자가 게시판 글을 신고할 수 있습니다."
      parameters:
        - name: "boardId"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "신고할 게시판 글의 ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "reason"
              properties:
                reason:
                  type: "string"
      responses:
        "200":
          description: "신고가 성공적으로 생성됨"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  isSuccess:
                    type: "boolean"
                  code:
                    type: "integer"
                    example: 200
                  message:
                    type: "string"
                    example: "신고 처리가 완료되었습니다."
                  result:
                    type: "object"
        "404":
          description: "게시판 글을 찾을 수 없음"
        "409":
          description: "게시판 글이 이미 신고됨"
        "500":
          description: "내부 서버 오류"
